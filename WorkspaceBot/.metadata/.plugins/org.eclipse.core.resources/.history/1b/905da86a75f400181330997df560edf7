package DemoSchedulers;

import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Date;
import java.util.List;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

import org.telegram.telegrambots.api.methods.send.SendMessage;
import org.telegram.telegrambots.api.objects.Update;
import org.telegram.telegrambots.exceptions.TelegramApiException;

import App.SianConnect;
import DAO.Abilitazione;
import DAO.Links;
import DAO.Queries;
import Jsoup.Query;

/**
 * This is a sample class to execute scheduler on specific date based on <code>java.util.Calendar</code>. Over here,
 * <code>executor</code> is a runnable which run on everyday basis from 8:00 AM to 5:00 PM.
 * 
 * @author Tomas Mali
 */
public class DemoScheduler {

	public static SianConnect mySianConnect = null;
	public static Update update = null;
	public static String query = "";
	public static boolean firstTime = true;
	public static ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);
	public static Long mio = (long) 145645559;

	public DemoScheduler(SianConnect instance, Update update) {
		mySianConnect = instance;
		this.update = update;

	}

	public static void setQuery(String s) {
		query = s;
	}

	/**
	 * Questo metodo fa partire il thread
	 * 
	 * @throws IOException
	 */
	public static void runThreadWithTask() throws IOException {

		Runnable taskMipaafTecnicheWebService = new Runnable() {

			@Override
			public void run() {
				Links link = Queries.getSingleLink("Mipaaf Tecniche Web Service");
				String query = "";

				List<Abilitazione> listAbilitations = Queries.GetUserIdWithProjectAndDescription("Sian",
						"Mipaaf Tecniche Web Service");

				try {

					String mainLink = "https://www.sian.it/portale-mipaaf/servizio?sid=2166";
					URL url_ = new URL(mainLink);
					HttpURLConnection http = (HttpURLConnection) url_.openConnection();
					int statusCode = http.getResponseCode();

					if (statusCode == 404)
						query = "404";

					URL url = new URL(link.getLink());
					System.out.println("TEST : " + new Date(url.openConnection().getLastModified()).toString());
					@SuppressWarnings("unused")
					InputStream input = url.openStream();
					// Non ci sono aggiornamenti dal sito di MIPAAF
					if (link.getUltimamodifica().equals(new Date(url.openConnection().getLastModified()).toString())) {

						// è la prima volta
						Abilitazione abilitazione = Queries.getSingleAbilitazione(update.getMessage().getChatId());
						boolean NonprimaVolta = Queries.getAbilitazioneStartedValue(abilitazione);
						if (!NonprimaVolta) {
							SendMessage message = new SendMessage().setChatId(update.getMessage().getChatId()).setText(
									query);
							try {
								Queries.threadStartedTrue(abilitazione.getUserid(), abilitazione.getLink());
								mySianConnect.execute(message);

							} catch (TelegramApiException e) {
								e.printStackTrace();
							}
						}
						// notifica solo me per il sistema down

					} else
					// Attenzione ci sono modifiche dal sito di MIPAAF
					{
						try {
							for (Abilitazione ab : listAbilitations) {
								SendMessage message = new SendMessage().setChatId(ab.getUserid()).setText(query + "\n"
										+ " Ultima modifica rilevata : " + new java.util.Date().toGMTString());
								mySianConnect.execute(message);
							}
						} catch (TelegramApiException e) {
							e.printStackTrace();
						}
						// ** qui si potrebbe aggiornare il timestamp del sito ed evitare di ristartare l'applicazione
						scheduler.shutdown();

					}

				} catch (IOException ioEx) {

					SendMessage message = new SendMessage().setChatId(mio).setText(
							"Il sito MIPAAF è andato giù con codice : " + query);
					try {
						mySianConnect.execute(message);
					} catch (TelegramApiException e) {
						e.printStackTrace();
					}

				}

				System.out.println("La query è : " + query);

				// Nel caso ci siano aggiornamenti
				if (query.equals("Attenzione ci sono aggiornamenti dal sito di MIPAAF")) {

					try {
						for (Abilitazione ab : listAbilitations) {
							SendMessage message = new SendMessage().setChatId(ab.getUserid()).setText(query + "\n"
									+ " Ultima modifica rilevata : " + new java.util.Date().toGMTString());
							mySianConnect.execute(message);
						}
					} catch (TelegramApiException e) {
						e.printStackTrace();
					}
					// ** qui si potrebbe aggiornare il timestamp del sito ed evitare di ristartare l'applicazione
					scheduler.shutdown();
				} else if (query.equals("Non ci sono Aggiornamenti dal sito di MIPAAF")) {
					// è la prima volta
					Abilitazione abilitazione = Queries.getSingleAbilitazione(update.getMessage().getChatId());
					boolean NonprimaVolta = Queries.getAbilitazioneStartedValue(abilitazione);
					if (!NonprimaVolta) {
						SendMessage message = new SendMessage().setChatId(update.getMessage().getChatId()).setText(
								query);
						try {
							Queries.threadStartedTrue(abilitazione.getUserid(), abilitazione.getLink());
							mySianConnect.execute(message);

						} catch (TelegramApiException e) {
							e.printStackTrace();
						}
					}
					// notifica solo me per il sistema down
				} else if (query.equals("404")) {
					SendMessage message = new SendMessage().setChatId(mio).setText(
							"Il sito MIPAAF è andato giù con codice : " + query);
					try {
						mySianConnect.execute(message);
					} catch (TelegramApiException e) {
						e.printStackTrace();
					}
				}

			}
		};

		Runnable taskCodificheRegistriVitivinicoli = new Runnable() {

			@Override
			public void run() {
				Links link = Queries.getSingleLink("Mipaaf Codifiche Registri Vitivinicoli");

				String query = Query.copyURLToFile(link.getLink());
				System.out.println("La query è : " + query);

				List<Abilitazione> listAbilitations = Queries.GetUserIdWithProjectAndDescription(link.getProgetto(),
						link.getDescrizione());

				// Nel caso ci siano aggiornamenti
				if (query.equals("Attenzione ci sono modifiche per 'Mipaaf Codifiche Registri Vitivinicoli'")) {

					try {
						for (Abilitazione ab : listAbilitations) {
							SendMessage message = new SendMessage().setChatId(ab.getUserid()).setText(query + "\n"
									+ " Ultima modifica rilevata : " + new java.util.Date().toGMTString());
							mySianConnect.execute(message);
						}
					} catch (TelegramApiException e) {
						e.printStackTrace();
					}
					// ** qui si potrebbe aggiornare il timestamp del sito ed evitare di ristartare l'applicazione
					scheduler.shutdown();
				} else if (query.equals("Non ci sono modifiche per 'Mipaaf Codifiche Registri Vitivinicoli'")) {
					// è la prima volta
					Abilitazione abilitazione = Queries.getSingleAbilitazione(update.getMessage().getChatId());
					boolean NonprimaVolta = Queries.getAbilitazioneStartedValue(abilitazione);
					if (!NonprimaVolta) {
						SendMessage message = new SendMessage().setChatId(update.getMessage().getChatId()).setText(
								query);
						try {
							Queries.threadStartedTrue(abilitazione.getUserid(), abilitazione.getLink());
							mySianConnect.execute(message);

						} catch (TelegramApiException e) {
							e.printStackTrace();
						}
					}
					// notifica solo me per il sistema down
				} else if (query.equals("404")) {
					SendMessage message = new SendMessage().setChatId(mio).setText(
							"Il sito 'Mipaaf Codifiche Registri Vitivinicoli' è andato giù con codice : " + query);
					try {
						mySianConnect.execute(message);
					} catch (TelegramApiException e) {
						e.printStackTrace();
					}
				}

			}
		};

		// scheduler.schedule(task, 1, TimeUnit.MINUTES);
		scheduler.scheduleWithFixedDelay(taskMipaafTecnicheWebService, 0, 20, TimeUnit.MINUTES);

	}
}